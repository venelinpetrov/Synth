{"version":3,"sources":["Envelope.js","Filter.js","HtmlControl.js","Osc.js","Patch.js","Voice.js","synth.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["/**\n  ADSR Envelope class\n\n  A: Attack\n  D: Decay\n  S: Sustain\n  R: Release\n\n  setValueAtTime(value, startTime)\n  linearRampToValueAtTime(value, endTime)\n  setTargetAtTime(target, startTime, timeConstant)\n    -target parameter is the value the parameter will start changing to at the given time.\n\n*/\nclass Envelope {\n  constructor(ctx) {\n    this.ctx = ctx;\n  }\n\n\n  //the method currently calculates the total time for which the note is not in sustain state\n  //the release phase is independently set in Voice.stop()\n  setADSR(audioParam, {attackTime = 0, decayTime = 0, sustainLevel = 1, releaseTime = 0}={}) {\n    var now = this.ctx.currentTime;\n\n    //audioParam.cancelScheduledValues(now);\n    audioParam.setValueAtTime(0, now);\n    //attack phase\n    audioParam.linearRampToValueAtTime(audioParam.value, now + attackTime);\n    //decay phase and sustain level\n    audioParam.linearRampToValueAtTime(audioParam.value * sustainLevel, now + attackTime + decayTime);\n    \n    //release phase\n    //the release phase is independently set in Voice.stop() via\n    //oscillator.vca.gain.linearRampToValueAtTime(0,this.ctx.currentTime + this.endTime);\n\n    return attackTime + decayTime + releaseTime;\n  }\n\n}\n","/**\n  Filter class\n\n  Filter types\n\n    - lowpass (12dB/octave)  ---\\\n      @ frequency - the cutoff frequency [HZ]\n      @ Q - the resonance [0 to 12] [dB]\n\n    - highpass (12dB/octave)  /---\n      @ frequency - the cutoff frequency [HZ]\n      @ Q - the resonance [0 to 12] [dB]\n\n    - bandpass (12dB/octave each side)  __/--\\__\n      @ frequency - the center frequency [HZ]\n      @ Q - controls the width of the band. The width becomes narrower as the Q value increases [.2 to 30]\n\n    - lowshelf  --\\__\n      @ frequnecy - the upper limit of the frequences where the boost (or attenuation) is applied. [Hz]\n      @ gain - the boost (+/-) [dB]\n\n    - highshelf  __/--\n      @ frequnecy - the lower limit of the frequences where the boost (or attenuation) is applied. [Hz]\n      @ gain - the boost (+/-) [dB]\n\n    - peaking  __/\\__\n      @ frequency - the center frequency of where the boost is applied [Hz]\n      @ Q - controls the width of the band of frequencies that are boosted. A large value implies a narrow width [.2 to 30]\n      @ gain - the boost (+/-) [dB]\n\n    - notch  --\\/--\n      @ frequency - the center frequency of where the notch is applied\n      @ Q - controls the width of the band of frequencies that are attenuated. A large value implies a narrow width [.2 to 30]\n\n*/\nclass Filter {\n  constructor(ctx) {\n    this.ctx = ctx;\n\n    //create filter node\n    this.vcf = ctx.createBiquadFilter();\n    this.vcf.frequency.value = 900;\n    //this.vcf.Q.value = 2;\n    this.vcf.type = 'lowpass';\n    //dry/wet gains\n    this.dryGain = this.ctx.createGain();\n    this.wetGain = this.ctx.createGain();\n\n    //filter component input and output\n    this.inputNode = this.ctx.createGain();\n    this.outputNode = this.ctx.createGain();\n\n    //connections\n    //input --> vcf --> wet --> output-(free out)\n    this.inputNode.connect(this.vcf);\n    this.vcf.connect(this.wetGain);\n    this.wetGain.connect(this.outputNode);\n\n    //input --> dry --> output-(free out)\n    this.inputNode.connect(this.dryGain);\n    this.dryGain.connect(this.outputNode);\n  }\n\n  get input() {\n    return this.inputNode;\n  }\n\n  connect(node) {\n    this.outputNode.connect(node);\n  }\n\n  bypass(bypassed){\n    //this.inputNode.disconnect(this.vcf);\n    if(bypassed) {\n      this.inputNode.disconnect(this.vcf);\n      this.inputNode.connect(this.outputNode);\n    } else {\n      this.inputNode.connect(this.vcf);\n      this.inputNode.disconnect(this.outputNode);\n    }\n\n  }\n  //get/set type\n  getType() {\n    return this.vcf.type;\n  }\n  setType(value) {\n    this.vcf.type = value;\n  }\n\n  //get/set frequency\n  getFrequency() {\n    return this.vcf.frequency.value;\n  }\n  setFrequency(value) {\n    this.vcf.frequency.value = value;\n  }\n\n  //get/set gain\n  getGain() {\n    return this.vcf.gain.value;\n  }\n  setGain(value) {\n    this.vcf.gain.value = value;\n  }\n\n  //get/set Q\n  getQ() {\n    return thid.vcf.Q.value;\n  }\n  setQ(value) {\n    this.vcf.Q.value = value;\n  }\n\n  //get/set dry/wet\n  //value=1 means 100% wet signal\n  setDryWet(value) {\n    this.wetGain.gain.value = value;\n    this.dryGain.gain.value = 1 - value;\n  }\n}\n","class HtmlControl {\n  //Slider control\n  static createSlider({id, className='', labelText, min, max, step, value, advanced=false} = {}) {\n    var valueIndicator;\n    var label;\n    var slider = document.createElement('input');\n\n\n    //simple slider\n    slider.setAttribute('type', 'range');\n    //slider.id = id;\n    slider.className = 'parameter' + ' ' + className;\n    slider.min = min;\n    slider.max = max;\n    slider.step = step;\n    slider.value = value;\n    if(!advanced) {\n      slider.id = id;\n    }\n\n    //advanced slider\n    if(advanced) {\n      //create html elements\n      label = document.createElement('label');\n      valueIndicator = document.createElement('input');\n      valueIndicator.className = 'parameter';\n\n      //label\n      label.textContent = labelText;\n\n\n      //value indicator\n      valueIndicator.id = id;\n      valueIndicator.setAttribute('type', 'number');\n      valueIndicator.min = min;\n      valueIndicator.max = max;\n      valueIndicator.value = value;\n      valueIndicator.step = step;\n      valueIndicator.addEventListener('input', (e) => {\n        slider.value = e.target.value;\n      }, false);\n\n\n      //slider\n      slider.classList.remove('parameter');\n      slider.addEventListener('input', (e)=>{\n        valueIndicator.value = e.target.value;\n        valueIndicator.dispatchEvent(new MouseEvent('input'));\n      }, false);\n\n      return {slider, label, valueIndicator};\n    }\n\n    return {slider};\n  }\n\n\n  static createSelect({id, labelText, options=[]} = {}) {\n    var select = document.createElement('select');\n    var label = document.createElement('label');\n    select.id = id;\n    select.className = 'parameter';\n    label.setAttribute('for', id);\n    label.textContent = labelText;\n    for (let i = 0; i < options.length; i++) {\n      let option = select.appendChild(document.createElement('option'));\n      option.value = options[i];\n      option.innerHTML = options[i];\n    }\n\n    return {select, label};\n  }\n\n  static createNumericTextBox({id, labelText, min = 0, max = 1, step=1, value = 1} = {}) {\n    var input = document.createElement('input');\n    var label = document.createElement('label');\n    input.id = id;\n    input.className = 'parameter';\n    input.setAttribute('type', 'number');\n    input.min = min;\n    input.max = max;\n    input.step = step;\n    input.value = value;\n    label.setAttribute('for', id);\n    label.textContent = labelText;\n\n    return {input, label};\n  }\n\n\n  static createCheckBox({id, labelText, className} = {}) {\n    var input = document.createElement('input');\n    var label = document.createElement('label');\n\n    input.id = id;\n    input.className = className;\n    input.setAttribute('type', 'checkbox');\n\n    label.setAttribute('for', id);\n    label.innerHTML = labelText;\n\n    return {input, label};\n\n  }\n}\n","class Oscillator {\n  constructor(ctx) {\n\n    this.ctx = ctx;\n    //create VCO (voltage controlled oscillator)\n    this.vco = this.ctx.createOscillator();\n\n    //create VCA (voltage controlled amplifier)\n    this.vca = this.ctx.createGain();\n\n    //vco->vca->destination\n    this.vco.connect(this.vca);\n\n    //f1/f2 crossfader gains\n    this.f1Gain = this.ctx.createGain();\n    this.f2Gain = this.ctx.createGain();\n\n    //connect vca to f1Gain and f2Gain\n    this.vca.connect(this.f1Gain);\n    this.vca.connect(this.f2Gain);\n\n\n  }\n  //get/set wave type\n  getType() {\n    return this.vco.type;\n  }\n  setType(value) {\n    this.vco.type = value;\n  }\n\n  //get/set gain\n  getGain() {\n    return this.vca.gain.value;\n  }\n  setGain(value) {\n    this.vca.gain.value = value;\n    //this.vca.gain.setTargetAtTime(0, this.ctx.currentTime, .5);\n  }\n\n  //get/set pitch\n  getPitch() {\n    return this.vco.detune.value;\n  }\n  setPitch(value) {\n    this.vco.detune.value = value  * 100; //detune is in cents (100cent = 1 semi-tone), but values come fractional, so multiply by 100\n  }\n\n  //get/set frequency\n  getFrequency() {\n    return this.vco.frequency.value;\n  }\n  setFrequency(value) {\n    this.vco.frequency.value = value;\n  }\n\n  //set crossfader value\n  //value=1 means all the output goes to filter1\n  setFilterCrossfader(value) {\n    this.f1Gain.gain.value = value;\n    this.f2Gain.gain.value = 1 - value;\n  }\n\n  //getters for oscillator outputs\n  get out1() {\n    return this.f1Gain;\n  }\n\n  get out2() {\n    return this.f2Gain;\n  }\n\n  get mainVca() {\n    return this.vca;\n  }\n  //connect vca->external_node\n  // connect(node) {\n  //   this.vca.connect(node);\n  // }\n\n  //start/stop\n  start(time=0) {\n    this.vco.start(time);\n  }\n  stop(time=0) {\n    this.vco.stop(time);\n  }\n}\n","class Patch {\n  constructor(){\n    this._patch = {\n      'Osc1_on': true,\n      'Osc1_wave': 'square',\n      'Osc1_pitch': 0,\n      'Osc1_gain': .8,\n      'Osc1_F1F2': .5,\n\n      'Osc2_on': false,\n      'Osc2_wave': 'sine',\n      'Osc2_pitch': 0,\n      'Osc2_gain': .5,\n      'Osc2_F1F2': .5,\n\n      'Envelope_attackTime': 0,\n      'Envelope_decayTime': 0,\n      'Envelope_sustainLevel': .7,\n      'Envelope_releaseTime': .06,\n\n      'Filter1_on': false,\n      'Filter1_type': 'lowpass',\n      'Filter1_frequency': 300,\n      'Filter1_Q': 1,\n      'Filter1_gain': 0,\n      'Filter1_dryWet': .5,\n\n      'Filter2_on': false,\n      'Filter2_type': 'lowpass',\n      'Filter2_frequency': 300,\n      'Filter2_Q': 1,\n      'Filter2_gain': 0,\n      'Filter2_dryWet': .5\n    }\n  }\n\n  setParameter(parameter, value) {\n    this._patch[parameter] = value;\n  }\n\n  getParameter(parameter) {\n    return this._patch[parameter];\n  }\n\n  //get/set patch\n  //TODO: implement patch import/export\n  getPatch() {\n    return this._patch;\n  }\n\n  setPatch(patch) {\n    this._patch = patch\n  }\n}\n","class Voice {\n  constructor(note, ctx) {\n    this.note = note;\n    this.ctx = ctx;\n    this.oscillators = [];\n    this.endTime = 0;\n  }\n\n  start(velocity) {\n    var vco1;\n    var vco2;\n    var vcf1 = effects['Filter1'];\n    var vcf2 = effects['Filter2'];\n    var vcoEnvelope = effects['Envelope'];\n\n    if(patch.getParameter('Osc1_on') == true) {\n      vco1 = new Oscillator(this.ctx);\n      //vco1Envelope = new Envelope(this.ctx);\n      vco1.setType(patch.getParameter('Osc1_wave'));\n      vco1.setGain(patch.getParameter('Osc1_gain') * velocity);\n      vco1.setFrequency(equalTempered440[this.note]);//sdfsdf\n      vco1.setPitch(+patch.getParameter('Osc1_pitch'));\n      vco1.start();\n\n\n      //connect\n      vco1.setFilterCrossfader(+patch.getParameter('Osc1_F1F2'));\n      vco1.out1.connect(vcf1.input);\n      vco1.out2.connect(vcf2.input);\n\n      //envelope\n      this.endTime = vcoEnvelope.setADSR(vco1.vca.gain, {\n        attackTime: +patch.getParameter('Envelope_attackTime'),\n        decayTime: +patch.getParameter('Envelope_decayTime'),\n        sustainLevel: +patch.getParameter('Envelope_sustainLevel'),\n        releaseTime: +patch.getParameter('Envelope_releaseTime')\n      });\n\n      //track active oscillators, so they can be stoped after that\n      this.oscillators.push(vco1);\n    }\n\n    if(patch.getParameter('Osc2_on') == true) {\n      vco2 = new Oscillator(this.ctx);\n      vco2.setType(patch.getParameter('Osc2_wave'));\n      vco2.setGain(patch.getParameter('Osc2_gain') * velocity);\n      vco2.setFrequency(equalTempered440[this.note]);//sdfsdf\n      vco2.setPitch(+patch.getParameter('Osc2_pitch'));\n      vco2.start();\n\n      //connect\n      vco2.setFilterCrossfader(+patch.getParameter('Osc2_F1F2'));\n      vco2.out1.connect(vcf1.input);\n      vco2.out2.connect(vcf2.input);\n\n      //envelope\n      this.endTime = vcoEnvelope.setADSR(vco2.vca.gain, {\n        attackTime: +patch.getParameter('Envelope_attackTime'),\n        decayTime: +patch.getParameter('Envelope_decayTime'),\n        sustainLevel: +patch.getParameter('Envelope_sustainLevel'),\n        releaseTime: +patch.getParameter('Envelope_releaseTime')\n      });\n\n      //track active oscillators, so they can be stoped after that\n      this.oscillators.push(vco2);\n    }\n\n    vcf1.connect(this.ctx.destination);\n    vcf2.connect(this.ctx.destination);\n  }\n\n  stop() {\n    this.oscillators.forEach((oscillator) => {\n      //release stage of the envelope\n      oscillator.vca.gain.setValueAtTime(oscillator.vca.gain.value, this.ctx.currentTime); //hold the sustain gain (preserve from peaking noises and sound flikering)\n      oscillator.vca.gain.linearRampToValueAtTime(0, this.ctx.currentTime + this.endTime); //lineary tend to 0 at the specified rate\n\n      oscillator.stop(this.ctx.currentTime + this.endTime); //osc stops when note is dead\n    });\n  }\n\n  getEndTime() {\n    return this.endTime;\n  }\n}\n","\n\n  var patch;\n  var equalTempered440;\n  var effects = {}; // global effects\n\n  window.onload = function() {\n    patch = new Patch();\n    equalTempered440 = [16.35, 17.32, 18.35, 19.45, 20.60, 21.83, 23.12, 24.50, 25.96, 27.50, 29.14, 30.87, 32.70, 34.65, 36.71, 38.89, 41.20, 43.65, 46.25, 49, 51.91, 55, 58.27, 61.74, 65.41, 69.3, 73.42, 77.78, 82.41, 87.31, 92.5, 98, 103.83, 110, 116.54, 123.47, 130.81, 138.59, 146.83, 155.56, 164.81, 174.61, 185, 196, 207.65, 220, 233.08, 246.94, 261.63, 277.18, 293.66, 311.13, 329.63, 349.23, 369.99, 392, 415.3, 440, 466.16, 493.88, 523.25, 554.37, 587.33, 622.25, 659.25, 698.46, 739.99, 783.99, 830.61, 880, 932.33, 987.77, 1046.50, 1108.73, 1174.66, 1244.51, 1318.51, 1396.91, 1479.98, 1567.98, 1661.22, 1760, 1864.66, 1975.53, 2093, 2217.46, 2349.32, 2489.02, 2637.02, 2793.83, 2959.96, 3135.96, 3322.44, 3520, 3729.31, 3951.07, 4186.01, 4434.92, 4698.63, 4978.03, 5274.04, 5587.65, 5919.91, 6271.93, 6644.88, 7040, 7458.62, 7902.13];\n\n    var ctx = new AudioContext();\n    var active_voices = {};\n\n    //Request midi accsess\n    navigator.requestMIDIAccess().then(function(midiAccess) {\n      console.log(\"MIDI ready!\");\n      var inputs = midiAccess.inputs.values();\n      for (var input = inputs.next() ; input && !input.done; input = inputs.next()) {\n        input.value.onmidimessage = onMIDIMessage;\n      }\n    }, function(msg){\n      console.log(\"Failed to get MIDI access - \", msg);\n    });\n\n    //OnMidiMessage event handler\n    function onMIDIMessage(event) {\n      console.log(event.data);\n      var status = event.data[0];\n      var note = event.data[1];\n      var velocity = event.data[2]/255; //normalize: velocity -> gain: [0,255] -> [0,1]\n      var voice;\n      if(status !== 144) {\n        return; //mod wheel and pitch wheel break the synth - TODO: fix that\n      }\n\n      if(velocity > 0) {\n        console.log('-->',ctx)\n        voice = new Voice(note, ctx);\n        active_voices[note] = voice;\n        console.log(active_voices);\n        voice.start(velocity);\n      } else {\n        active_voices[note].stop();\n        delete active_voices[note];\n        //voice = null;\n      }\n    }\n\n    //Initialize synth\n    initSynth();\n\n    //Initialize patch\n    initPatch();\n\n    //Create gloabal effects\n    effects['Filter1'] = new Filter(ctx);\n    effects['Filter1'].bypass(true);\n    effects['Filter2'] = new Filter(ctx);\n    effects['Filter2'].bypass(true);\n    effects['Envelope'] = new Envelope(ctx);\n  }\n  //Create global effects function\n  function createEffects() {\n\n  }\n\n  //Initialize patch function\n  function initPatch() {\n    var params = document.getElementsByClassName('parameter');\n    var powers = document.getElementsByClassName('power');\n    //extract values from 'parameter'-s and attach event listener to each\n    [].forEach.call(params, function(v){\n      v.value = patch.getParameter(v.id); //init value with default patch\n      v.addEventListener('input', function (e){\n        var vcf1 = effects['Filter1'];\n        var vcf2 = effects['Filter2'];\n        patch.setParameter(e.target.id, e.target.value);\n        console.log(patch);\n\n        vcf1.setType(patch.getParameter('Filter1_type'));\n        vcf1.setFrequency(patch.getParameter('Filter1_frequency'));\n        vcf1.setGain(patch.getParameter('Filter1_gain'));\n        vcf1.setQ(patch.getParameter('Filter1_Q'));\n        vcf1.setDryWet(patch.getParameter('Filter1_dryWet'));\n\n        vcf2.setType(patch.getParameter('Filter2_type'));\n        vcf2.setFrequency(patch.getParameter('Filter2_frequency'));\n        vcf2.setGain(patch.getParameter('Filter2_gain'));\n        vcf2.setQ(patch.getParameter('Filter2_Q'));\n        vcf2.setDryWet(patch.getParameter('Filter2_dryWet'));\n      }, false);\n    });\n\n    //extract values from on/off buttons\n    [].forEach.call(powers, function(v){\n      v.checked = patch.getParameter(v.id); //init value with default patch\n      v.addEventListener('change', function (e){\n\n        patch.setParameter(e.target.id, e.target.checked);\n\n        console.log(patch);\n      }, false);\n    });\n  }\n\n  //Initialize synth function\n  function initSynth() {\n    var oscProto;\n    var filterProto;\n    var envelopeProto;\n\n    //Oscillator html rendering\n    oscProto = Object.create(HTMLElement.prototype);\n    oscProto.createdCallback = function() {\n      var powerControl = HtmlControl.createCheckBox({\n        id: this.id + '_on',\n        labelText: 'On/Off: ',\n        className: 'power'\n      });\n      var gainControl = HtmlControl.createSlider({\n        id: this.id + '_gain',\n        advanced: true,\n        labelText: 'Amp: ',\n        min: 0,\n        max: 1,\n        step: 0.1,\n        value: patch.getParameter(this.id + '_gain'),\n        className: 'slider'\n      });\n\n      var waveTypeControl = HtmlControl.createSelect({\n        id: this.id + '_wave',\n        labelText: 'Wave Type: ',\n        options: ['sine', 'square', 'triangle', 'sawtooth']\n      });\n\n      var pitchControl = HtmlControl.createNumericTextBox({\n          id: this.id + '_pitch',\n          labelText: 'Pitch: ',\n          min: -64,\n          max: 64,\n          step: .01,\n          value: 0\n      });\n\n      var f1f2Control = HtmlControl.createSlider({\n        id: this.id + '_F1F2',\n        min: 0,\n        max: 1,\n        step: .1,\n        value: patch.getParameter(this.id + '_F1F2'),\n        advanced: false\n      });\n\n      //on/off control\n      this.appendChild(powerControl.label);\n      this.appendChild(powerControl.input);\n\n      //wave type control\n      this.appendChild(waveTypeControl.label);\n      this.appendChild(waveTypeControl.select);\n\n      //pitch control\n      this.appendChild(pitchControl.label);\n      this.appendChild(pitchControl.input);\n\n      //gain control\n      gainControl.label.setAttribute('for', this.id + '_gain');\n      this.appendChild(gainControl.label);\n      this.appendChild(gainControl.slider);\n      this.appendChild(gainControl.valueIndicator);\n\n      //F1F2 control\n      this.appendChild(f1f2Control.slider);\n\n      console.log('Oscillator created');\n    };\n    document.registerElement('x-osc', {prototype: oscProto});\n\n    //Filter html rendering\n    filterProto = Object.create(HTMLElement.prototype);\n    filterProto.createdCallback = function() {\n      var powerControl = HtmlControl.createCheckBox({\n        id: this.id + '_on',\n        labelText: 'On/Off: ',\n        className: 'power'\n      });\n      var filterTypeControl = HtmlControl.createSelect({\n        id: this.id + '_type',\n        labelText: 'Filter Type: ',\n        options: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch']\n      });\n\n      var frequencyControl = HtmlControl.createSlider({\n        id: this.id + '_frequency',\n        labelText: 'Frequency',\n        min: 20,\n        max: 20000,\n        step: 10,\n        value: patch.getParameter(this.id + '_frequency'),\n        advanced: true\n      });\n\n      var QControl = HtmlControl.createSlider({\n        id: this.id + '_Q',\n        labelText: 'Q',\n        min: .2,\n        max: 30,\n        step: .1,\n        value: patch.getParameter(this.id + '_Q'),\n        advanced: true\n      });\n\n      var gainControl = HtmlControl.createSlider({\n        id: this.id + '_gain',\n        labelText: 'Gain',\n        min: -40,\n        max: 40,\n        step: .1,\n        value: patch.getParameter(this.id + '_gain'),\n        advanced: true\n      });\n\n      var dryWetControl = HtmlControl.createSlider({\n        id: this.id + '_dryWet',\n        labelText: 'Dry/Wet (%)',\n        min: 0,\n        max: 1,\n        step: .1,\n        value: patch.getParameter(this.id + '_dryWet'),\n        advanced: true\n      });\n      var type = patch.getParameter(this.id + '_type');\n\n      //on/off\n      this.appendChild(powerControl.label);\n      this.appendChild(powerControl.input);\n      //handle filter on/off -> pypass it when off\n      powerControl.input.addEventListener('change', (function(){\n        if(patch.getParameter(this.id + '_on') == false) {\n          effects[this.id].bypass(false);\n          console.log('bypass on', this.id);\n        } else {\n          effects[this.id].bypass(true);\n          console.log('bypass off', this.id);\n        }\n      }).bind(this), false);\n\n      //filter type control\n      this.appendChild(filterTypeControl.label);\n      this.appendChild(filterTypeControl.select);\n      filterTypeControl.select.addEventListener('change', e => {\n        var option = e.currentTarget.value;\n\n        //show/hide gain control, since it is not available for all types of filters\n        if(option == 'lowpass' ||\n            option == 'highpass' ||\n            option == 'bandpass' ||\n            option == 'notch') {\n          //hide gain control\n          gainControl.label.style.display = 'none';\n          gainControl.slider.style.display = 'none';\n          gainControl.valueIndicator.style.display = 'none';\n\n          QControl.label.style.display = '';\n          QControl.slider.style.display = '';\n          QControl.valueIndicator.style.display = '';\n        } else {\n          //show gain control\n          gainControl.label.style.display = '';\n          gainControl.slider.style.display = '';\n          gainControl.valueIndicator.style.display = '';\n\n          if(option != 'peaking') {\n            QControl.label.style.display = 'none';\n            QControl.slider.style.display = 'none';\n            QControl.valueIndicator.style.display = 'none';\n          } else {\n            QControl.label.style.display = '';\n            QControl.slider.style.display = '';\n            QControl.valueIndicator.style.display = '';\n          }\n        }\n      });\n\n      //frequency control\n      this.appendChild(frequencyControl.label);\n      this.appendChild(frequencyControl.slider);\n      this.appendChild(frequencyControl.valueIndicator);\n\n      //Q control\n      this.appendChild(QControl.label);\n      this.appendChild(QControl.slider);\n      this.appendChild(QControl.valueIndicator);\n\n      //gain control\n      this.appendChild(gainControl.label);\n      this.appendChild(gainControl.slider);\n      this.appendChild(gainControl.valueIndicator);\n      if(type == 'lowpass' ||\n          type == 'highpass' ||\n          type == 'bandpass' ||\n          type == 'notch') {\n        gainControl.label.style.display = 'none';\n        gainControl.slider.style.display = 'none';\n        gainControl.valueIndicator.style.display = 'none';\n      } else {\n        if(type != 'peaking') {\n          QControl.label.style.display = 'none';\n          QControl.slider.style.display = 'none';\n          QControl.valueIndicator.style.display = 'none';\n        }\n      }\n\n      //dry/wet control\n      this.appendChild(dryWetControl.label);\n      this.appendChild(dryWetControl.slider);\n      this.appendChild(dryWetControl.valueIndicator);\n\n      console.log('Filter created');\n    };\n    document.registerElement('x-filter', {prototype: filterProto});\n\n    //Envelope\n    envelopeProto = Object.create(HTMLElement.prototype);\n    envelopeProto.createdCallback = function() {\n      var attackTimeControl = HtmlControl.createSlider({\n        id: this.id + '_attackTime',\n        labelText: 'Attack time',\n        min: 0,\n        max: 4,\n        step: .01,\n        value: patch.getParameter(this.id + '_attackTime'),\n        advanced: true\n      });\n\n      var decayTimeControl = HtmlControl.createSlider({\n        id: this.id + '_decayTime',\n        labelText: 'Decay time',\n        min: 0,\n        max: 4,\n        step: .01,\n        value: patch.getParameter(this.id + '_decayTime'),\n        advanced: true\n      });\n\n      var sustainTimeControl = HtmlControl.createSlider({\n        id: this.id + '_sustainLevel',\n        labelText: 'Sustain level',\n        min: 0,\n        max: 1,\n        step: .1,\n        value: patch.getParameter(this.id + '_sustainLevel'),\n        advanced: true\n      });\n\n      var releaseTimeControl = HtmlControl.createSlider({\n        id: this.id + '_releaseTime',\n        labelText: 'Release time',\n        min: 0,\n        max: 4,\n        step: .01,\n        value: patch.getParameter(this.id + '_releaseTime'),\n        advanced: true\n      });\n      //attack\n      this.appendChild(attackTimeControl.label);\n      this.appendChild(attackTimeControl.slider);\n      this.appendChild(attackTimeControl.valueIndicator);\n\n      //decay\n      this.appendChild(decayTimeControl.label);\n      this.appendChild(decayTimeControl.slider);\n      this.appendChild(decayTimeControl.valueIndicator);\n\n      //sustain\n      this.appendChild(sustainTimeControl.label);\n      this.appendChild(sustainTimeControl.slider);\n      this.appendChild(sustainTimeControl.valueIndicator);\n\n      //release\n      this.appendChild(releaseTimeControl.label);\n      this.appendChild(releaseTimeControl.slider);\n      this.appendChild(releaseTimeControl.valueIndicator);\n    };\n    document.registerElement('x-envelope', {prototype: envelopeProto});\n  }\n"],"sourceRoot":"/source/"}