{"version":3,"sources":["synth.js","Components/Osc.js"],"names":[],"mappingsfile":"synth.js","sourcesContent":["import Oscillator from './Components/Osc.js'\n\n  \nvar ctx = new AudioContext();\nvar vco = new Oscillator(ctx);\nconsole.log(vco.getFrequency());\nconsole.log(vco, 1);\n\n","export default class Oscillator {\n  constructor(ctx) {\n    this.wave = 'sine';\n    this.gain = 1;\n    this.pitch = 0;\n    this.ctx = ctx;\n    //create VCO (voltage controlled oscillator)\n    this.vco = this.ctx.createOscillator();\n\n    //create VCA (voltage controlled amplifier)\n    this.vca = this.ctx.createGain();\n\n    //vco->vca->destination\n    this.vco.connect(this.vca);\n    this.vca.connect(this.ctx.destination);\n  }\n  //get/set wave type\n  getType() {\n    return this.vco.type;\n  }\n  setType(wave) {\n    this.vco.type = wave;\n  }\n\n  //get/set gain\n  getGain() {\n    return this.vca.gain.value;\n  }\n  setGain(value) {\n    this.vca.gain.value = value;\n    this.vca.gain.setTargetAtTime(0, this.ctx.currentTime, .5);\n  }\n\n  //get/set pitch\n  getPitch() {\n    return this.vco.detune.value;\n  }\n  setPitch(value) {\n    this.vco.detune.value = value;\n  }\n\n  //get/set frequency\n  getFrequency() {\n    return this.vco.frequency.value;\n  }\n  setFrequency(value) {\n    this.vco.frequency.value = value;\n  }\n\n  //connect vca->external_node\n  connect(node) {\n    this.vca.connect(node);\n  }\n\n  //start/stop\n  start(time=0) {\n    this.vco.start(time);\n  }\n  stop(time=0) {\n    this.vco.stop(time);\n  }\n}"],"sourceRoot":"/source/"}